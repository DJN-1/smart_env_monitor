#ifndef FONT_DATA_H
#define FONT_DATA_H

#include <linux/types.h> // u8 타입 정의

static const u8 font8x8_basic[96][8] = {
    [0] = {0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00}, // ' '
    [1] = {0x00,0x00,0x00,0x00,0x00,0x18,0x18,0x00}, // '!'
    [2] = {0x00,0x00,0x00,0x00,0x66,0x66,0x00,0x00}, // '"'
    [3] = {0x00,0x24,0x7E,0x24,0x7E,0x24,0x00,0x00}, // '#'
    [4] = {0x00,0x18,0x7C,0x0E,0x38,0x6C,0x3E,0x18}, // '$'
    [5] = {0x00,0x06,0x66,0x30,0x18,0x0C,0x66,0x60}, // '%'
    [6] = {0x00,0x3C,0x46,0x20,0x10,0x20,0x42,0x3C}, // '&'
    [7] = {0x00,0x00,0x00,0x00,0x00,0x00,0x18,0x18}, // '''
    [8] = {0x00,0x0C,0x18,0x30,0x30,0x30,0x18,0x0C}, // '('
    [9] = {0x00,0x30,0x18,0x0C,0x0C,0x0C,0x18,0x30}, // ')'
    [10] = {0x00,0x00,0x66,0x3C,0xFF,0x3C,0x66,0x00}, // '*'
    [11] = {0x00,0x00,0x18,0x18,0x7E,0x18,0x18,0x00}, // '+'
    [12] = {0x00,0x00,0x00,0x00,0x00,0x18,0x18,0x0C}, // ','
    [13] = {0x00,0x00,0x00,0x00,0x7E,0x00,0x00,0x00}, // '-'
    [14] = {0x00,0x00,0x00,0x00,0x00,0x00,0x18,0x00}, // '.'
    [15] = {0x00,0x00,0x00,0x60,0x30,0x18,0x0C,0x06}, // '/'
    [16] = {0x00,0x3C,0x66,0x6E,0x76,0x6E,0x66,0x3C}, // '0'
    [17] = {0x00,0x7E,0x18,0x18,0x18,0x18,0x38,0x18}, // '1'
    [18] = {0x00,0x7E,0x60,0x30,0x18,0x0C,0x66,0x3C}, // '2'
    [19] = {0x00,0x3C,0x66,0x06,0x3C,0x0C,0x06,0x7E}, // '3'
    [20] = {0x00,0x0C,0x0C,0x7E,0x6C,0x3C,0x1C,0x0C}, // '4'
    [21] = {0x00,0x7C,0x06,0x06,0x7C,0x60,0x60,0x7E}, // '5'
    [22] = {0x00,0x3C,0x66,0x66,0x7C,0x60,0x60,0x3C}, // '6'
    [23] = {0x00,0x00,0x60,0x30,0x18,0x0C,0x06,0x7E}, // '7'
    [24] = {0x00,0x3C,0x66,0x66,0x3C,0x66,0x66,0x3C}, // '8'
    [25] = {0x00,0x3C,0x06,0x06,0x3E,0x66,0x66,0x3C}, // '9'
    [26] = {0x00,0x00,0x18,0x18,0x00,0x18,0x18,0x00}, // ':'
    [27] = {0x00,0x0C,0x18,0x18,0x00,0x18,0x18,0x00}, // ';'
    [28] = {0x00,0x0C,0x18,0x30,0x60,0x30,0x18,0x0C}, // '<'
    [29] = {0x00,0x00,0x00,0x7E,0x00,0x7E,0x00,0x00}, // '='
    [30] = {0x00,0x30,0x18,0x0C,0x06,0x0C,0x18,0x30}, // '>'
    [31] = {0x00,0x18,0x00,0x18,0x18,0x0C,0x66,0x3C}, // '?'
    [32] = {0x00,0x3C,0x42,0x5A,0x5A,0x5A,0x40,0x3C}, // '@'
    [33] = {0x00,0x66,0x66,0x7E,0x66,0x66,0x3C,0x18}, // 'A'
    [34] = {0x00,0x7C,0x66,0x66,0x7C,0x66,0x66,0x7C}, // 'B'
    [35] = {0x00,0x3C,0x66,0x60,0x60,0x60,0x66,0x3C}, // 'C'
    [36] = {0x00,0x7C,0x66,0x66,0x66,0x66,0x66,0x7C}, // 'D'
    [37] = {0x00,0x7E,0x60,0x60,0x7C,0x60,0x60,0x7E}, // 'E'
    [38] = {0x00,0x7E,0x60,0x60,0x7C,0x60,0x60,0x60}, // 'F'
    [39] = {0x00,0x3C,0x66,0x60,0x6E,0x66,0x66,0x3C}, // 'G'
    [40] = {0x00,0x66,0x66,0x66,0x7E,0x66,0x66,0x66}, // 'H'
    [41] = {0x00,0x18,0x18,0x18,0x18,0x18,0x18,0x18}, // 'I'
    [42] = {0x00,0x0C,0x0C,0x0C,0x0C,0x6C,0x6C,0x38}, // 'J'
    [43] = {0x00,0x66,0x6C,0x78,0x70,0x78,0x6C,0x66}, // 'K'
    [44] = {0x00,0x60,0x60,0x60,0x60,0x60,0x60,0x7E}, // 'L'
    [45] = {0x00,0x66,0x7E,0x7E,0x66,0x66,0x66,0x66}, // 'M'
    [46] = {0x00,0x66,0x76,0x7E,0x7E,0x6E,0x66,0x66}, // 'N'
    [47] = {0x00,0x3C,0x66,0x66,0x66,0x66,0x66,0x3C}, // 'O'
    [48] = {0x00,0x7C,0x66,0x66,0x7C,0x60,0x60,0x60}, // 'P'
    [49] = {0x00,0x3C,0x66,0x66,0x66,0x66,0x3C,0x0C}, // 'Q'
    [50] = {0x00,0x7C,0x66,0x66,0x7C,0x6C,0x66,0x66}, // 'R'
    [51] = {0x00,0x3C,0x60,0x60,0x3C,0x06,0x06,0x7C}, // 'S'
    [52] = {0x00,0x7E,0x18,0x18,0x18,0x18,0x18,0x18}, // 'T'
    [53] = {0x00,0x66,0x66,0x66,0x66,0x66,0x66,0x3C}, // 'U'
    [54] = {0x00,0x66,0x66,0x66,0x66,0x3C,0x18,0x18}, // 'V'
    [55] = {0x00,0x66,0x66,0x66,0x66,0x7E,0x3C,0x18}, // 'W'
    [56] = {0x00,0x66,0x66,0x3C,0x18,0x3C,0x66,0x66}, // 'X'
    [57] = {0x00,0x66,0x66,0x3C,0x18,0x18,0x18,0x18}, // 'Y'
    [58] = {0x00,0x7E,0x0C,0x18,0x30,0x60,0x7E,0x00}, // 'Z'
    [59] = {0x00,0x3C,0x30,0x30,0x30,0x30,0x30,0x3C}, // '['
    [60] = {0x00,0x60,0x30,0x18,0x0C,0x06,0x00,0x00}, // '\'
    [61] = {0x00,0x3C,0x0C,0x0C,0x0C,0x0C,0x0C,0x3C}, // ']'
    [62] = {0x00,0x18,0x3C,0x66,0x00,0x00,0x00,0x00}, // '^'
    [63] = {0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x7E}, // '_'
    [64] = {0x00,0x0C,0x18,0x00,0x00,0x00,0x00,0x00}, // '`'
    [65] = {0x00,0x00,0x3C,0x06,0x3E,0x66,0x3E,0x00}, // 'a'
    [66] = {0x00,0x60,0x60,0x7C,0x66,0x66,0x7C,0x00}, // 'b'
    [67] = {0x00,0x00,0x3C,0x60,0x60,0x60,0x3C,0x00}, // 'c'
    [68] = {0x00,0x06,0x06,0x3E,0x66,0x66,0x3E,0x00}, // 'd'
    [69] = {0x00,0x00,0x3C,0x66,0x7E,0x60,0x3C,0x00}, // 'e'
    [70] = {0x00,0x1C,0x30,0x30,0x7C,0x30,0x30,0x30}, // 'f'
    [71] = {0x00,0x00,0x3E,0x66,0x66,0x3E,0x06,0x3C}, // 'g'
    [72] = {0x00,0x60,0x60,0x7C,0x66,0x66,0x66,0x00}, // 'h'
    [73] = {0x00,0x18,0x00,0x18,0x18,0x18,0x18,0x00}, // 'i'
    [74] = {0x00,0x0C,0x00,0x0C,0x0C,0x0C,0x6C,0x38}, // 'j'
    [75] = {0x00,0x60,0x60,0x6C,0x78,0x70,0x6C,0x66}, // 'k'
    [76] = {0x00,0x18,0x18,0x18,0x18,0x18,0x0C,0x00}, // 'l'
    [77] = {0x00,0x00,0x6C,0x7E,0x6C,0x6C,0x6C,0x00}, // 'm'
    [78] = {0x00,0x00,0x3C,0x66,0x66,0x66,0x66,0x00}, // 'n'
    [79] = {0x00,0x00,0x3C,0x66,0x66,0x66,0x3C,0x00}, // 'o'
    [80] = {0x00,0x00,0x7C,0x66,0x66,0x7C,0x60,0x60}, // 'p'
    [81] = {0x00,0x00,0x3E,0x66,0x66,0x3E,0x06,0x06}, // 'q'
    [82] = {0x00,0x00,0x36,0x38,0x30,0x30,0x30,0x00}, // 'r'
    [83] = {0x00,0x00,0x3C,0x60,0x3C,0x06,0x7C,0x00}, // 's'
    [84] = {0x00,0x30,0x7E,0x30,0x30,0x30,0x36,0x18}, // 't'
    [85] = {0x00,0x00,0x66,0x66,0x66,0x66,0x3E,0x00}, // 'u'
    [86] = {0x00,0x00,0x66,0x66,0x3C,0x18,0x00,0x00}, // 'v'
    [87] = {0x00,0x00,0x66,0x66,0x66,0x3C,0x18,0x00}, // 'w'
    [88] = {0x00,0x00,0x66,0x3C,0x18,0x3C,0x66,0x00}, // 'x'
    [89] = {0x00,0x66,0x66,0x3E,0x06,0x3E,0x00,0x00}, // 'y'
    [90] = {0x00,0x7E,0x0C,0x18,0x30,0x7E,0x00,0x00}, // 'z'
    [91] = {0x00,0x0C,0x0C,0x0C,0x18,0x0C,0x0C,0x0C}, // '{'
    [92] = {0x00,0x18,0x18,0x18,0x18,0x18,0x18,0x18}, // '|'
    [93] = {0x00,0x30,0x30,0x30,0x18,0x30,0x30,0x30}, // '}'
    [94] = {0x00,0x00,0x30,0x6C,0x00,0x00,0x00,0x00}, // '~'
    [95] = {0x00,0x3C,0x42,0x42,0x42,0x42,0x3C,0x00}, // DEL (127)
};

// 왼쪽으로 90도 회전 (반시계방향) - 오른쪽 회전된 텍스트 보정용
static inline void rotate_font_90_ccw(const u8 *src, u8 *dst) {
    int x, y;
    for (y = 0; y < 8; y++) {
        dst[y] = 0;
        for (x = 0; x < 8; x++) {
            if (src[7-x] & (1 << (7-y))) {
                dst[y] |= (1 << (x));
            }
        }
    }
}

// 오른쪽으로 90도 회전 (시계방향) - 왼쪽 회전된 텍스트 보정용
static inline void rotate_font_90_cw(const u8 *src, u8 *dst) {
    int x, y;
    for (y = 0; y < 8; y++) {
        dst[y] = 0;
        for (x = 0; x < 8; x++) {
            if (src[7-x] & (1 << y)) {
                dst[y] |= (1 << x);
            }
        }
    }
}

// 상하 반전 함수
static inline void flip_font_vertical(const u8 *src, u8 *dst) {
    int i;
    for (i = 0; i < 8; i++) {
        dst[i] = src[7 - i];
    }
}

// 좌우 반전 함수
static inline void flip_font_horizontal(const u8 *src, u8 *dst) {
    int i, j;
    for (i = 0; i < 8; i++) {
        dst[i] = 0;
        for (j = 0; j < 8; j++) {
            if (src[i] & (1 << j)) {
                dst[i] |= (1 << (7-j));
            }
        }
    }
}

#endif // FONT_DATA_H
